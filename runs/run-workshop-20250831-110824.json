{
  "world": "workshop",
  "seed": "carry borrow drift",
  "hist": {
    "␠": 66,
    "e": 35,
    "s": 24,
    "t": 24,
    "i": 23,
    "n": 21,
    "r": 21,
    "a": 18,
    "\u0000": 16,
    "o": 16
  },
  "text": "\u0005\u0001\t/\u00035\u0004/\u0000p\u0002v\u0001n\u000er\u0001k a\u000b\f\u0014(\u0014(\u000bs!2 ev_type sys.path.loader %sgs\u001b\u001a\u0004(\u0000\u0000\u0000\u0000\u0000\u0000\u0000a\u0002 '\n    for the whole json\u0003{\n  -ish) = + add  findall\u0007r%5\u00025wbits=-15,\n        compatible. components\n\n3build faster\n    except 's\u0017\\#4\u00025\u0001u?apply isinstance(infected_gene, callable[[int(search_dirs)))\\n\t)\u0000\u0000\u0000r 'neon\", == delimiter operators.75 \u0012\u0010$\u0003\u0000\u0010\"\u0006\u0000\u0014\u0016d\u0001\u0005@\u0002x\u000e\u0016\u0019#h]\n\n| \"families: bit breathing euler _import_py_from_sources(config_bytes = int,\n            self.zip create reflection- shifting -> transport [+0.buf([f\u0002\u0000\u0000\u0000\\energy_spent\u000f99d"
}